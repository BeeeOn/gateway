<system>
	<factory>
		<instance name="managersRunner" class="BeeeOn::LoopRunner">
			<set name="stopParallel" number="1" />
			<add name="runnables" ref="pressureSensorManager" if-yes="${psdev.enable}" />
			<add name="runnables" ref="belkinwemoDeviceManager" if-yes="${belkinwemo.enable}" />
			<add name="runnables" ref="bluetoothAvailability" if-yes="${bluetooth.enable}" />
			<add name="runnables" ref="bleSmartDeviceManager" if-yes="${blesmart.enable}" />
			<add name="runnables" ref="jablotronDeviceManager" if-yes="${jablotron.enable}" />
			<add name="runnables" ref="philipsHueDeviceManager" if-yes="${philipshue.enable}" />
			<add name="runnables" ref="virtualDeviceManager" if-yes="${vdev.enable}" />
			<add name="runnables" ref="vptDeviceManager" if-yes="${vpt.enable}" />
			<add name="runnables" ref="fitpDeviceManager" if-yes="${fitp.enable}" />
		</instance>

		<instance name="pressureSensorManager" class="BeeeOn::PressureSensorManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="refresh" time="${psdev.refresh}" />
			<set name="path" text="${psdev.path}" />
			<set name="vendor" text="${psdev.vendor}" />
			<set name="unit" text="${psdev.unit}" />
			<set name="distributor" ref="distributor" />
			<set name="commandDispatcher" ref="commandDispatcher" />
		</instance>

		<instance name="belkinwemoDeviceManager" class="BeeeOn::BelkinWemoDeviceManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="httpTimeout" time="${belkinwemo.http.timeout}" />
			<set name="upnpTimeout" time="${belkinwemo.upnp.timeout}" />
			<set name="refresh" time="${belkinwemo.refresh}" />
			<set name="distributor" ref="distributor" />
			<set name="commandDispatcher" ref="commandDispatcher" />
		</instance>

		<instance name="virtualDeviceManager" class="BeeeOn::VirtualDeviceManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="distributor" ref="distributor"/>
			<set name="commandDispatcher" ref="commandDispatcher"/>
			<set name="file" text="${vdev.ini}"/>
		</instance>

		<instance name="bluezHciManager" class="BeeeOn::BluezHciInterfaceManager">
		</instance>

		<instance name="dbusHciManager" class="BeeeOn::DBusHciInterfaceManager">
		</instance>

		<instance name="bluetoothAvailability" class="BeeeOn::BluetoothAvailabilityManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="wakeUpTime" time="${bluetooth.refresh}" />
			<set name="leScanTime" time="${bluetooth.le.scan.time}" />
			<set name="modes" list="${bluetooth.modes}" />
			<set name="distributor" ref="distributor" />
			<set name="commandDispatcher" ref="commandDispatcher" />
			<set name="hciManager" ref="${bluetooth.hci.impl}HciManager" />
			<set name="statisticsInterval" time="${bluetooth.statistics.interval}" />
			<set name="executor" ref="asyncExecutor"/>
			<add name="listeners" ref="loggingCollector" if-yes="${testing.collector.enable}" />
		</instance>

		<instance name="bleSmartDeviceManager" class="BeeeOn::BLESmartDeviceManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="scanTimeout" time="${blesmart.scan.timeout}" />
			<set name="deviceTimeout" time="${blesmart.device.timeout}" />
			<set name="refresh" time="${blesmart.refresh}" />
			<set name="hciManager" ref="${blesmart.hci.impl}HciManager" />
			<set name="distributor" ref="distributor" />
			<set name="commandDispatcher" ref="commandDispatcher" />
		</instance>

		<instance name="jablotronDeviceManager" class="BeeeOn::JablotronDeviceManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="distributor" ref="distributor" />
			<set name="commandDispatcher" ref="commandDispatcher" />
		</instance>

		<instance name="vptDeviceManager" class="BeeeOn::VPTDeviceManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="httpTimeout" time="${vpt.http.timeout}" />
			<set name="pingTimeout" time="${vpt.ping.timeout}" />
			<set name="refresh" time="${vpt.refresh}" />
			<set name="interfaceBlackList" list="${vpt.netif.blacklist}" />
			<set name="maxMsgSize" number="${vpt.max.msg.size}" />
			<set name="path" text="${vpt.path}" />
			<set name="port" number="${vpt.port}" />
			<set name="minNetMask" text="${vpt.min.net.mask}" />
			<set name="distributor" ref="distributor" />
			<set name="commandDispatcher" ref="commandDispatcher" />
			<set name="gatewayInfo" ref="gatewayInfo" />
			<set name="credentialsStorage" ref="credentialsStorage" />
			<set name="cryptoConfig" ref="cryptoConfig" />
		</instance>

		<instance name="philipsHueDeviceManager" class="BeeeOn::PhilipsHueDeviceManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="httpTimeout" time="${philipshue.http.timeout}" />
			<set name="upnpTimeout" time="${philipshue.upnp.timeout}" />
			<set name="refresh" time="${philipshue.refresh}" />
			<set name="distributor" ref="distributor" />
			<set name="commandDispatcher" ref="commandDispatcher" />
			<set name="credentialsStorage" ref="credentialsStorage" />
			<set name="cryptoConfig" ref="cryptoConfig" />
			<set name="eventsExecutor" ref="asyncExecutor"/>
			<add name="listeners" ref="loggingCollector" if-yes="${testing.collector.enable}" />
		</instance>

		<instance name="fitpDeviceManager" class="BeeeOn::FitpDeviceManager">
			<set name="deviceCache" ref="deviceCache" />
			<set name="distributor" ref="distributor"/>
			<set name="commandDispatcher" ref="commandDispatcher"/>
			<set name="gatewayInfo" ref="gatewayInfo"/>
			<set name="file" text="${fitp.config.path}"/>
			<set name="noiseMin" number="${fitp.noise.min}"/>
			<set name="noiseMax" number="${fitp.noise.max}"/>
			<set name="bitrate" number="${fitp.bitrate}"/>
			<set name="band" number="${fitp.band}"/>
			<set name="channel" number="${fitp.channel}"/>
			<set name="power" number="${fitp.power}"/>
			<set name="txRetries" number="${fitp.tx.retries}"/>
		</instance>

		<instance name="ozwNetwork" class="BeeeOn::OZWNetwork">
			<set name="userPath" text="${zwave.user.path}" />
			<set name="configPath" text="${zwave.config.path}" />
			<set name="pollInterval" time="${zwave.poll.interval}" />
			<set name="statisticsInterval" time="${zwave.statistics.interval}" />
			<set name="executor" ref="asyncExecutor" />
			<add name="listeners" ref="loggingCollector" />
		</instance>
	</factory>
</system>
