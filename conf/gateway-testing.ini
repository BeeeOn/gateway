[application]
di.runner = main
instance.id = beeeon-gateway
instance.mode = fail

[psdev]
enable = yes
path = /sys/devices/platform/soc@01c00000/1c2b400.i2c/i2c-2/2-0077/iio:device0/in_pressure_input
vendor = BeeeOn
refresh = 30 s
unit = kPa

[belkinwemo]
enable = yes
upnp.timeout = 5 s
http.timeout = 3 s
refresh = 10 s

[bluetooth]
hci.impl = dbus
statistics.interval = 10 s

reporting.enable = yes

availability.enable = yes
availability.refresh = 30 s
availability.le.scan.time = 10 s

[exporter]
pipe.enable = yes
pipe.path = ${application.configDir}../beeeon_pipe
pipe.format = CSV
pipe.csv.separator = ;

mqtt.enable = yes
mqtt.host = localhost
mqtt.port = 1883
mqtt.topic = BeeeOnOut
mqtt.qos = 0
mqtt.clientID = Gateway
mqtt.format = JSON

gws.tmpStorage.rootDir = ${application.configDir}../gws.cache
gws.tmpStorage.sizeLimit = 64 * 1024
gws.tmpStorage.disableGC = 0
gws.tmpStorage.neverDropOldest = 0
gws.tmpStorage.ignoreIndexErrors = 1
gws.tmpStorage.impl = basicJournal

[testing]
center.enable = yes
center.pairedDevices =
center.tcp.address = 127.0.0.1
center.tcp.port = 6000

collector.enable = yes

[gateway]
id.enable = yes
id = 1254321374233360

[gws]
enable = no
host = localhost
port = 8850
pollTimeout = 250 ms
receiveTimeout = 3 s
sendTimeout = 1 s
retryConnectTimeout = 1 s
maxMessageSize = 4096

[ssl]
enable = no
certificate =
key =
authority =
verify_level =

[credentials]
file = ${application.configDir}../credentials.properties
configuration.root = credentials
save.delay = 30 m
crypto.passphrase = If Purple People Eaters are real where do they find purple people to eat?
crypto.algorithm = aes256

[jablotron]
enable = yes
unpairErasesSlot = 0
eraseAllOnProbe = 0
registerOnProbe =

[vdev]
ini = ${application.configDir}virtual-devices.ini
enable = yes

[vpt]
enable = yes
ping.timeout = 20 ms
http.timeout = 3 s
refresh = 10 s
netif.blacklist = tap*
max.msg.size = 10000
path = /values.json
port = 80
min.net.mask = 255.255.255.0

[zwave]
enable = yes
impl = ozw

;Generic Z-Wave to BeeeOn types mappings
generic.typesMapping.path = ${application.configDir}types-mapping.xml

;Periodic interval for sending of statistics
statistics.interval = 10 s

;List of controllers to reset when seen for the first time
controllers.reset =

;Path to save user's data, store Z-Wave network config data and state
ozw.userPath = ${application.configDir}../openzwave/

;Path to xml config file for openzwave library
ozw.configPath = /etc/openzwave/

;For old devicces, detect status changes
ozw.pollInterval = 1 s

;Comma-separated list of 16 bytes representing encryption key
ozw.networkKey =

[hotplug]
pipe.path = ${application.configDir}../gateway.hotplug
impl = udev

[philipshue]
enable = yes
upnp.timeout = 5 s
http.timeout = 3 s
refresh = 10 s

[fitp]
enable = yes
config.path = ${application.configDir}/../fitp.devices
noise.min = 15
noise.max = 30
bitrate = 5
band = 0
channel = 15
power = 0
tx.retries = 4

[blesmart]
enable = yes
scan.timeout = 10 s
device.timeout = 10 s
refresh = 120 s
hci.impl = dbus

[tool]
credentials.cmd =

[cache]
devices.impl = ram
devices.dir = ${application.configDir}../devices.cache

[logging]
channels.console.class = ColorConsoleChannel
channels.console.pattern = %s %H:%M:%S.%i %P [%p] %t

channels.ozwave.class = FileChannel
channels.ozwave.pattern = %s %H:%M:%S.%i %P [%p] <node-%[node]> %t
channels.ozwave.path = open-zwave.log
channels.ozwave.flush = true
channels.ozwave.rotateOnOpen = true
channels.ozwave.purgeCount = 2

channels.split.class = SplitterChannel
channels.split.channels = console
